import pandas as pd
import streamlit as st
from wordcloud import WordCloud
import matplotlib.pyplot as plt

st.set_option('deprecation.showPyplotGlobalUse', False)
st.title("üçº Visualizador de Mat√©rias - Beb√™ Reborn")

arquivo = "reborn.csv.csv"  # Nome exatamente como o seu arquivo

try:
    df = pd.read_csv(arquivo)
    df.columns = df.columns.str.strip()  # Remove espa√ßos dos nomes das colunas

    if "titulo" not in df.columns:
        st.error("A coluna 'titulo' n√£o foi encontrada no CSV.")
    else:
        st.subheader("Selecione uma mat√©ria:")
        opcoes = df["titulo"].dropna().unique()
        escolha = st.selectbox("Escolha um t√≠tulo:", opcoes)

        materia = df[df["titulo"] == escolha].iloc[0]

        # Exibir data, not√≠cia e classifica√ß√£o
        if "data" in df.columns:
            st.markdown(f"### üìÖ Data: {materia['data']}")
        else:
            st.warning("Coluna 'data' n√£o encontrada no CSV.")

        st.markdown("### üì∞ Not√≠cia:")
        st.write(materia["texto"])

        st.markdown("### üè∑Ô∏è Classifica√ß√£o:")
        st.success(materia["classifica√ß√£o"])

        # Gera√ß√£o da nuvem de palavras
        st.markdown("### ‚òÅÔ∏è Nuvem de Palavras:")

        texto = str(materia["texto"])
        if texto.strip():
            wordcloud = WordCloud(
                width=800,
                height=400,
                background_color='white',
                stopwords=None,
                collocations=False
            ).generate(texto)

            plt.figure(figsize=(10, 5))
            plt.imshow(wordcloud, interpolation='bilinear')
            plt.axis("off")
            st.pyplot()
        else:
            st.warning("O texto est√° vazio, imposs√≠vel gerar a nuvem de palavras.")

except FileNotFoundError:
    st.error(f"Arquivo '{arquivo}' n√£o encontrado.")
except Exception as e:
    st.error(f"Ocorreu um erro: {e}")

