import pandas as pd
import streamlit as st
from wordcloud import WordCloud
import matplotlib.pyplot as plt

@st.cache_data
def load_data(file_path):
    try:
        df = pd.read_csv(file_path)
        return df
    except FileNotFoundError:
        st.error(f"Erro: O arquivo '{file_path}' n√£o foi encontrado.")
        return pd.DataFrame()
    except Exception as e:
        st.error(f"Ocorreu um erro ao ler o arquivo CSV: {e}")
        return pd.DataFrame()

def classificar_texto_comercial_ou_emocional(texto):
    texto = texto.lower()

    palavras_comercial = [
        'venda', 'com√©rcio', 'comprar', 'produto', 'loja', 'neg√≥cio', 'an√∫ncio',
        'marketing', 'mercado', 'cliente', 'pre√ßo', 'e-commerce', 'divulga√ß√£o'
    ]
    palavras_emocional = [
        'm√£e', 'filho', 'emo√ß√£o', 'amor', 'carinho', 'sentimento', 'afetivo',
        'fam√≠lia', 'ado√ß√£o', 'tristeza', 'felicidade', 'depress√£o', 'solid√£o',
        'psicol√≥gico', 'v√≠nculo', 'empatia'
    ]

    if any(p in texto for p in palavras_emocional):
        return 'Emocional'
    elif any(p in texto for p in palavras_comercial):
        return 'Comercial'
    else:
        return 'N√£o definido'

st.title("üçº Visualizador de Mat√©rias - Beb√™ Reborn")

df = load_data("reborn.csv")
df.columns = df.columns.str.strip()

if "titulo" not in df.columns:
    st.error("A coluna 'titulo' n√£o foi encontrada no CSV.")
else:
    st.subheader("Selecione uma mat√©ria:")
    opcoes = df["titulo"].dropna().unique()
    escolha = st.selectbox("Escolha um t√≠tulo:", opcoes)

    materia = df[df["titulo"] == escolha].iloc[0]

    if "data" in df.columns:
        st.markdown(f"### üìÖ Data: {materia['data']}")
    else:
        st.warning("Coluna 'data' n√£o encontrada no CSV.")

    st.markdown("### üì∞ Not√≠cia:")
    st.write(materia["texto"])

    # Classifica√ß√£o Comercial ou Emocional
    classificacao = classificar_texto_comercial_ou_emocional(str(materia["texto"]))
    st.markdown("### üè∑Ô∏è Classifica√ß√£o (Autom√°tica):")
    st.success(classificacao)

    # Nuvem de palavras
    st.markdown("### ‚òÅÔ∏è Nuvem de Palavras:")

    texto = str(materia["texto"])
    if texto.strip():
        wordcloud = WordCloud(
            width=800,
            height=400,
            background_color='white',
            stopwords=None,
            collocations=False
        ).generate(texto)

        plt.figure(figsize=(10, 5))
        plt.imshow(wordcloud, interpolation='bilinear')
        plt.axis("off")
        st.pyplot(plt)
    else:
        st.warning("O texto est√° vazio, imposs√≠vel gerar a nuvem de palavras.")
